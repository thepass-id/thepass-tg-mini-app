import { RpcProvider, type RpcProviderOptions, RPC, RpcChannel } from "starknet";
import type { DataLoaderOptions } from "../types";
export declare class RpcChannelBatch extends RpcChannel {
    private wait;
    private batchSize;
    private loader;
    constructor({ batchInterval, maxBatchSize, ...optionsOrProvider }: DataLoaderOptions & RpcProviderOptions);
    private batchRequests;
    protected errorHandler(method: string, params: any, rpcError?: RPC.JRPC.Error, otherError?: any): void;
    protected fetchEndpoint<T extends keyof RPC.Methods>(method: T, params: RPC.Methods[T]["params"]): Promise<RPC.Methods[T]["result"]>;
}
export declare class RpcBatchProvider extends RpcProvider {
    constructor({ batchInterval, maxBatchSize, ...optionsOrProvider }: DataLoaderOptions & RpcProviderOptions);
}
