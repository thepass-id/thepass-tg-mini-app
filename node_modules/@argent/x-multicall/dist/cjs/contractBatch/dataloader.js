"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDataLoader = void 0;
const dataloader_1 = __importDefault(require("dataloader"));
const starknet_1 = require("starknet");
const aggregate_1 = require("./aggregate");
const getDataLoader = (provider, multicallAddress, options = {
    batchInterval: 500,
    maxBatchSize: 10,
}) => {
    const dl = new dataloader_1.default(async (calls) => {
        dl.clearAll();
        const result = await (0, aggregate_1.aggregate)(provider, multicallAddress, calls);
        return result;
    }, {
        maxBatchSize: options.maxBatchSize,
        batchScheduleFn(callback) {
            setTimeout(callback, options.batchInterval);
        },
        cacheKeyFn(call) {
            const { contractAddress, entrypoint, calldata = [] } = call;
            const cacheKeyContractAddress = starknet_1.num.toHexString(contractAddress);
            const cacheKeyEntrypoint = starknet_1.hash.getSelector(entrypoint);
            const cacheKeyCalldata = starknet_1.CallData.toCalldata(calldata)
                .map((c) => starknet_1.num.toHexString(c))
                .join("-");
            return `${cacheKeyContractAddress}--${cacheKeyEntrypoint}--${cacheKeyCalldata}`;
        },
    });
    return dl;
};
exports.getDataLoader = getDataLoader;
