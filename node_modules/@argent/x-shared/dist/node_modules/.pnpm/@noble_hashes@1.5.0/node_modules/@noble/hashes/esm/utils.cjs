"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const o=require("./_assert.cjs");/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const u=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4)),i=t=>new DataView(t.buffer,t.byteOffset,t.byteLength),y=(t,e)=>t<<32-e|t>>>e,b=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68,r=t=>t<<24&4278190080|t<<8&16711680|t>>>8&65280|t>>>24&255;function p(t){for(let e=0;e<t.length;e++)t[e]=r(t[e])}const l=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0"));function g(t){o.bytes(t);let e="";for(let n=0;n<t.length;n++)e+=l[t[n]];return e}function f(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function s(t){return typeof t=="string"&&(t=f(t)),o.bytes(t),t}class w{clone(){return this._cloneInto()}}function x(t){const e=c=>t().update(s(c)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}exports.Hash=w;exports.byteSwap=r;exports.byteSwap32=p;exports.bytesToHex=g;exports.createView=i;exports.isLE=b;exports.rotr=y;exports.toBytes=s;exports.u32=u;exports.utf8ToBytes=f;exports.wrapConstructor=x;
