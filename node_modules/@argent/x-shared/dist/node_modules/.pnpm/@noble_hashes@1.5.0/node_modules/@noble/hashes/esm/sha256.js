import { HashMD as m, Chi as p, Maj as u } from "./_md.js";
import { wrapConstructor as D, rotr as i } from "./utils.js";
const g = /* @__PURE__ */ new Uint32Array([
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
]), b = /* @__PURE__ */ new Uint32Array([
  1779033703,
  3144134277,
  1013904242,
  2773480762,
  1359893119,
  2600822924,
  528734635,
  1541459225
]), h = /* @__PURE__ */ new Uint32Array(64);
class w extends m {
  constructor() {
    super(64, 32, 8, !1), this.A = b[0] | 0, this.B = b[1] | 0, this.C = b[2] | 0, this.D = b[3] | 0, this.E = b[4] | 0, this.F = b[5] | 0, this.G = b[6] | 0, this.H = b[7] | 0;
  }
  get() {
    const { A: d, B: o, C: t, D: s, E: a, F: f, G: c, H: e } = this;
    return [d, o, t, s, a, f, c, e];
  }
  // prettier-ignore
  set(d, o, t, s, a, f, c, e) {
    this.A = d | 0, this.B = o | 0, this.C = t | 0, this.D = s | 0, this.E = a | 0, this.F = f | 0, this.G = c | 0, this.H = e | 0;
  }
  process(d, o) {
    for (let x = 0; x < 16; x++, o += 4)
      h[x] = d.getUint32(o, !1);
    for (let x = 16; x < 64; x++) {
      const A = h[x - 15], n = h[x - 2], C = i(A, 7) ^ i(A, 18) ^ A >>> 3, H = i(n, 17) ^ i(n, 19) ^ n >>> 10;
      h[x] = H + h[x - 7] + C + h[x - 16] | 0;
    }
    let { A: t, B: s, C: a, D: f, E: c, F: e, G: r, H: l } = this;
    for (let x = 0; x < 64; x++) {
      const A = i(c, 6) ^ i(c, 11) ^ i(c, 25), n = l + A + p(c, e, r) + g[x] + h[x] | 0, H = (i(t, 2) ^ i(t, 13) ^ i(t, 22)) + u(t, s, a) | 0;
      l = r, r = e, e = c, c = f + n | 0, f = a, a = s, s = t, t = n + H | 0;
    }
    t = t + this.A | 0, s = s + this.B | 0, a = a + this.C | 0, f = f + this.D | 0, c = c + this.E | 0, e = e + this.F | 0, r = r + this.G | 0, l = l + this.H | 0, this.set(t, s, a, f, c, e, r, l);
  }
  roundClean() {
    h.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
  }
}
const G = /* @__PURE__ */ D(() => new w());
export {
  w as SHA256,
  G as sha256
};
