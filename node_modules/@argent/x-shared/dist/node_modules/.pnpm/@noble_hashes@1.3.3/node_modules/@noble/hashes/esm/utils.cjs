"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const u=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4));function f(t){return t instanceof Uint8Array||t!=null&&typeof t=="object"&&t.constructor.name==="Uint8Array"}const s=t=>new DataView(t.buffer,t.byteOffset,t.byteLength),y=(t,e)=>t<<32-e|t>>>e,r=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!r)throw new Error("Non little-endian hardware is not supported");function o(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function i(t){if(typeof t=="string"&&(t=o(t)),!f(t))throw new Error(`expected Uint8Array, got ${typeof t}`);return t}class w{clone(){return this._cloneInto()}}function p(t){const e=c=>t().update(i(c)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}exports.Hash=w;exports.createView=s;exports.isLE=r;exports.rotr=y;exports.toBytes=i;exports.u32=u;exports.utf8ToBytes=o;exports.wrapConstructor=p;
