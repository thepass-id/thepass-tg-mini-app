"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const p=require("./_assert.cjs"),c=require("./utils.cjs");function b(u,t,n,e){if(typeof u.setBigUint64=="function")return u.setBigUint64(t,n,e);const i=BigInt(32),o=BigInt(4294967295),s=Number(n>>i&o),r=Number(n&o),f=e?4:0,l=e?0:4;u.setUint32(t+f,s,e),u.setUint32(t+l,r,e)}class d extends c.Hash{constructor(t,n,e,i){super(),this.blockLen=t,this.outputLen=n,this.padOffset=e,this.isLE=i,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=c.createView(this.buffer)}update(t){p.exists(this);const{view:n,buffer:e,blockLen:i}=this;t=c.toBytes(t);const o=t.length;for(let s=0;s<o;){const r=Math.min(i-this.pos,o-s);if(r===i){const f=c.createView(t);for(;i<=o-s;s+=i)this.process(f,s);continue}e.set(t.subarray(s,s+r),this.pos),this.pos+=r,s+=r,this.pos===i&&(this.process(n,0),this.pos=0)}return this.length+=t.length,this.roundClean(),this}digestInto(t){p.exists(this),p.output(t,this),this.finished=!0;const{buffer:n,view:e,blockLen:i,isLE:o}=this;let{pos:s}=this;n[s++]=128,this.buffer.subarray(s).fill(0),this.padOffset>i-s&&(this.process(e,0),s=0);for(let h=s;h<i;h++)n[h]=0;b(e,i-8,BigInt(this.length*8),o),this.process(e,0);const r=c.createView(t),f=this.outputLen;if(f%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const l=f/4,g=this.get();if(l>g.length)throw new Error("_sha2: outputLen bigger than state");for(let h=0;h<l;h++)r.setUint32(4*h,g[h],o)}digest(){const{buffer:t,outputLen:n}=this;this.digestInto(t);const e=t.slice(0,n);return this.destroy(),e}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());const{blockLen:n,buffer:e,length:i,finished:o,destroyed:s,pos:r}=this;return t.length=i,t.pos=r,t.finished=o,t.destroyed=s,i%n&&t.buffer.set(e),t}}exports.SHA2=d;
