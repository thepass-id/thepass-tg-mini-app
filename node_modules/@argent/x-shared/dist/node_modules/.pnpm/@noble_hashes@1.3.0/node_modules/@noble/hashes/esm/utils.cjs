"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const o=require("./crypto.cjs");/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const s=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!s)throw new Error("Non little-endian hardware is not supported");Array.from({length:256},(t,r)=>r.toString(16).padStart(2,"0"));function y(t){if(typeof t!="string")throw new TypeError(`utf8ToBytes expected string, got ${typeof t}`);return new TextEncoder().encode(t)}function f(t){if(typeof t=="string"&&(t=y(t)),!(t instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof t})`);return t}function u(...t){if(!t.every(e=>e instanceof Uint8Array))throw new Error("Uint8Array list expected");if(t.length===1)return t[0];const r=t.reduce((e,n)=>e+n.length,0),i=new Uint8Array(r);for(let e=0,n=0;e<t.length;e++){const c=t[e];i.set(c,n),n+=c.length}return i}class p{clone(){return this._cloneInto()}}function l(t=32){if(o.crypto&&typeof o.crypto.getRandomValues=="function")return o.crypto.getRandomValues(new Uint8Array(t));throw new Error("crypto.getRandomValues must be defined")}exports.Hash=p;exports.concatBytes=u;exports.isLE=s;exports.randomBytes=l;exports.toBytes=f;exports.utf8ToBytes=y;
