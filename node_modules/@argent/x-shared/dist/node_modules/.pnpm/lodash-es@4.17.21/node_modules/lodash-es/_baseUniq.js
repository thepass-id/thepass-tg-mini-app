import p from "./_SetCache.js";
import u from "./_arrayIncludes.js";
import A from "./_arrayIncludesWith.js";
import c from "./_cacheHas.js";
import g from "./_createSet.js";
import w from "./_setToArray.js";
var R = 200;
function x(t, S, s) {
  var l = -1, n = u, o = t.length, h = !0, r = [], e = r;
  if (s)
    h = !1, n = A;
  else if (o >= R) {
    var m = g(t);
    if (m)
      return w(m);
    h = !1, n = c, e = new p();
  } else
    e = r;
  e:
    for (; ++l < o; ) {
      var i = t[l], f = i;
      if (i = s || i !== 0 ? i : 0, h && f === f) {
        for (var a = e.length; a--; )
          if (e[a] === f)
            continue e;
        r.push(i);
      } else n(e, f, s) || (e !== r && e.push(f), r.push(i));
    }
  return r;
}
export {
  x as default
};
