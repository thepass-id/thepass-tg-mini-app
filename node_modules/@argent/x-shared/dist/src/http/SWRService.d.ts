import { ICacheService } from '../cache';
import { IDateService } from './IDateService';
import { IHttpService } from './IHttpService';
type SWROptions = {
    freshFor: number;
    staleFor: number;
};
export declare class SWRService implements Pick<IHttpService, "get"> {
    private dateService;
    private cacheService;
    private httpService;
    private options;
    private inFlightRequests;
    constructor(dateService: IDateService, cacheService: ICacheService, httpService: IHttpService, options: SWROptions);
    rawGet(url: string, requestInit?: RequestInit): Promise<Response>;
    get<T>(url: string, requestInit?: RequestInit): Promise<T>;
    private fetchAndCache;
    private parseResponse;
}
export {};
