import { BigNumberish } from 'starknet';
export interface IPrettifyNumberConfig {
    minDecimalPlaces: number;
    maxDecimalPlaces: number;
    /** significants digits to show in decimals while respecting decimal places */
    minDecimalSignificantDigits: number;
    /** special case for zero, e.g. we may want to display $0.00 or 0.0 ETH */
    decimalPlacesWhenZero: number;
    /** allow leading zeros in the decimal part  e.g. 0.0123 -> 0.012 */
    allowLeadingZerosInDecimalPart: boolean;
}
export declare const prettifyNumberConfig: Record<string, IPrettifyNumberConfig>;
export declare const prettifyCurrencyNumber: (number: BigNumberish, overrides?: Partial<IPrettifyNumberConfig>) => string | null;
export declare const prettifyTokenNumber: (number: BigNumberish, overrides?: Partial<IPrettifyNumberConfig>) => string | null;
/**
 * Prettify an input number for display according to the config
 *
 * @see test suite for examples
 */
export declare const prettifyNumber: (number: BigNumberish, { minDecimalPlaces, maxDecimalPlaces, minDecimalSignificantDigits, decimalPlacesWhenZero, allowLeadingZerosInDecimalPart, }?: IPrettifyNumberConfig) => string | null;
