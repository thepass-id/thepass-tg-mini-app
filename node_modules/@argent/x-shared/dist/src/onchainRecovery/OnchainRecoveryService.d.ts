import { Address } from '../chains/starknet/address';
import { IHttpService } from '../http';
import { IOnchainRecoveryService } from './IOnchainRecoveryService';
import { ActiveOnchainRecovery, OnchainRecovery, StartOnchainRecovery } from './schema';
/**
 * RecoveryService class implements IRecoveryService interface.
 */
export declare class OnchainRecoveryService implements IOnchainRecoveryService {
    protected readonly apiBase: string;
    private readonly httpService;
    constructor(apiBase: string, httpService: IHttpService);
    /**
     * Retrieves the on-chain recovery details for a given address and recovery ID.
     * If no recovery ID is provided, it retrieves the latest recovery details.
     * @param address - The address to retrieve the recovery details.
     * @param recoveryId - The recovery ID to retrieve the details.
     * @returns A promise that resolves to the on-chain recovery details.
     */
    getRecovery(address: Address, recoveryId: number): Promise<OnchainRecovery | null>;
    /**
     * Retrieves the on-chain recovery details for a given address and recovery ID.
     * If no recovery ID is provided, it retrieves the latest recovery details.
     * @param address - The address to retrieve the current active recovery details.
     * @returns A promise that resolves to the on-chain recovery details.
     */
    getActiveRecovery(address: Address): Promise<ActiveOnchainRecovery | null>;
    /**
     * Starts the recovery process for a given address.
     * @param address - The address to recover.
     * @param feeToken - The token to be used for the recovery fee.
     * @param publicKey - The public key of the signer.
     * @param privateKey - The private key of the signer.
     * @returns A promise that resolves to the recovery details.
     */
    startRecovery(address: Address, feeToken: Address, publicKey: string, privateKey: string): Promise<StartOnchainRecovery>;
    /**
     * Completes the recovery process for a given address and recovery ID.
     * @param address - The address to recover.
     * @param recoveryId - The recovery ID to complete.
     * @returns A promise that resolves to the recovery details
     *
     */
    completeRecovery(address: Address, recoveryId: number): Promise<OnchainRecovery>;
}
