import { z } from 'zod';
export declare const dappLinkSchema: z.ZodObject<{
    name: z.ZodEnum<["dappland", "discord", "github", "telegram", "twitter", "website"]>;
    url: z.ZodString;
    position: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    name: "dappland" | "discord" | "github" | "telegram" | "twitter" | "website";
    url: string;
    position: number;
}, {
    name: "dappland" | "discord" | "github" | "telegram" | "twitter" | "website";
    url: string;
    position: number;
}>;
export declare const dappContractSchema: z.ZodObject<{
    address: z.ZodEffects<z.ZodString, `0x${string}`, string>;
    chain: z.ZodEnum<["ethereum", "starknet"]>;
}, "strip", z.ZodTypeAny, {
    address: `0x${string}`;
    chain: "ethereum" | "starknet";
}, {
    address: string;
    chain: "ethereum" | "starknet";
}>;
export declare const knownDappSchema: z.ZodObject<{
    dappId: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    logoUrl: z.ZodOptional<z.ZodString>;
    dappUrl: z.ZodOptional<z.ZodString>;
    inAppBrowserCompatible: z.ZodBoolean;
    argentVerified: z.ZodBoolean;
    links: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodEnum<["dappland", "discord", "github", "telegram", "twitter", "website"]>;
        url: z.ZodString;
        position: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        name: "dappland" | "discord" | "github" | "telegram" | "twitter" | "website";
        url: string;
        position: number;
    }, {
        name: "dappland" | "discord" | "github" | "telegram" | "twitter" | "website";
        url: string;
        position: number;
    }>, "many">>;
    contracts: z.ZodOptional<z.ZodArray<z.ZodObject<{
        address: z.ZodEffects<z.ZodString, `0x${string}`, string>;
        chain: z.ZodEnum<["ethereum", "starknet"]>;
    }, "strip", z.ZodTypeAny, {
        address: `0x${string}`;
        chain: "ethereum" | "starknet";
    }, {
        address: string;
        chain: "ethereum" | "starknet";
    }>, "many">>;
    categories: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    supportedApps: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    brandColor: z.ZodOptional<z.ZodString>;
    executeFromOutsideAllowed: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    sessionConfig: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodObject<{
        maxExpiryDays: z.ZodNumber;
        allowList: z.ZodArray<z.ZodObject<{
            contractAddress: z.ZodEffects<z.ZodString, `0x${string}`, string>;
            methods: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            contractAddress: `0x${string}`;
            methods: string[];
        }, {
            contractAddress: string;
            methods: string[];
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        maxExpiryDays: number;
        allowList: {
            contractAddress: `0x${string}`;
            methods: string[];
        }[];
    }, {
        maxExpiryDays: number;
        allowList: {
            contractAddress: string;
            methods: string[];
        }[];
    }>, z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>]>>>;
}, "strip", z.ZodTypeAny, {
    name: string;
    dappId: string;
    inAppBrowserCompatible: boolean;
    argentVerified: boolean;
    description?: string | undefined;
    logoUrl?: string | undefined;
    dappUrl?: string | undefined;
    links?: {
        name: "dappland" | "discord" | "github" | "telegram" | "twitter" | "website";
        url: string;
        position: number;
    }[] | undefined;
    contracts?: {
        address: `0x${string}`;
        chain: "ethereum" | "starknet";
    }[] | undefined;
    categories?: string[] | undefined;
    supportedApps?: string[] | undefined;
    brandColor?: string | undefined;
    executeFromOutsideAllowed?: boolean | undefined;
    sessionConfig?: {
        maxExpiryDays: number;
        allowList: {
            contractAddress: `0x${string}`;
            methods: string[];
        }[];
    } | {} | null | undefined;
}, {
    name: string;
    dappId: string;
    inAppBrowserCompatible: boolean;
    argentVerified: boolean;
    description?: string | undefined;
    logoUrl?: string | undefined;
    dappUrl?: string | undefined;
    links?: {
        name: "dappland" | "discord" | "github" | "telegram" | "twitter" | "website";
        url: string;
        position: number;
    }[] | undefined;
    contracts?: {
        address: string;
        chain: "ethereum" | "starknet";
    }[] | undefined;
    categories?: string[] | undefined;
    supportedApps?: string[] | undefined;
    brandColor?: string | undefined;
    executeFromOutsideAllowed?: boolean | undefined;
    sessionConfig?: {
        maxExpiryDays: number;
        allowList: {
            contractAddress: string;
            methods: string[];
        }[];
    } | {} | null | undefined;
}>;
export declare const knownDappsSchema: z.ZodArray<z.ZodObject<{
    dappId: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    logoUrl: z.ZodOptional<z.ZodString>;
    dappUrl: z.ZodOptional<z.ZodString>;
    inAppBrowserCompatible: z.ZodBoolean;
    argentVerified: z.ZodBoolean;
    links: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodEnum<["dappland", "discord", "github", "telegram", "twitter", "website"]>;
        url: z.ZodString;
        position: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        name: "dappland" | "discord" | "github" | "telegram" | "twitter" | "website";
        url: string;
        position: number;
    }, {
        name: "dappland" | "discord" | "github" | "telegram" | "twitter" | "website";
        url: string;
        position: number;
    }>, "many">>;
    contracts: z.ZodOptional<z.ZodArray<z.ZodObject<{
        address: z.ZodEffects<z.ZodString, `0x${string}`, string>;
        chain: z.ZodEnum<["ethereum", "starknet"]>;
    }, "strip", z.ZodTypeAny, {
        address: `0x${string}`;
        chain: "ethereum" | "starknet";
    }, {
        address: string;
        chain: "ethereum" | "starknet";
    }>, "many">>;
    categories: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    supportedApps: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    brandColor: z.ZodOptional<z.ZodString>;
    executeFromOutsideAllowed: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    sessionConfig: z.ZodOptional<z.ZodNullable<z.ZodUnion<[z.ZodObject<{
        maxExpiryDays: z.ZodNumber;
        allowList: z.ZodArray<z.ZodObject<{
            contractAddress: z.ZodEffects<z.ZodString, `0x${string}`, string>;
            methods: z.ZodArray<z.ZodString, "many">;
        }, "strip", z.ZodTypeAny, {
            contractAddress: `0x${string}`;
            methods: string[];
        }, {
            contractAddress: string;
            methods: string[];
        }>, "many">;
    }, "strip", z.ZodTypeAny, {
        maxExpiryDays: number;
        allowList: {
            contractAddress: `0x${string}`;
            methods: string[];
        }[];
    }, {
        maxExpiryDays: number;
        allowList: {
            contractAddress: string;
            methods: string[];
        }[];
    }>, z.ZodObject<{}, "strip", z.ZodTypeAny, {}, {}>]>>>;
}, "strip", z.ZodTypeAny, {
    name: string;
    dappId: string;
    inAppBrowserCompatible: boolean;
    argentVerified: boolean;
    description?: string | undefined;
    logoUrl?: string | undefined;
    dappUrl?: string | undefined;
    links?: {
        name: "dappland" | "discord" | "github" | "telegram" | "twitter" | "website";
        url: string;
        position: number;
    }[] | undefined;
    contracts?: {
        address: `0x${string}`;
        chain: "ethereum" | "starknet";
    }[] | undefined;
    categories?: string[] | undefined;
    supportedApps?: string[] | undefined;
    brandColor?: string | undefined;
    executeFromOutsideAllowed?: boolean | undefined;
    sessionConfig?: {
        maxExpiryDays: number;
        allowList: {
            contractAddress: `0x${string}`;
            methods: string[];
        }[];
    } | {} | null | undefined;
}, {
    name: string;
    dappId: string;
    inAppBrowserCompatible: boolean;
    argentVerified: boolean;
    description?: string | undefined;
    logoUrl?: string | undefined;
    dappUrl?: string | undefined;
    links?: {
        name: "dappland" | "discord" | "github" | "telegram" | "twitter" | "website";
        url: string;
        position: number;
    }[] | undefined;
    contracts?: {
        address: string;
        chain: "ethereum" | "starknet";
    }[] | undefined;
    categories?: string[] | undefined;
    supportedApps?: string[] | undefined;
    brandColor?: string | undefined;
    executeFromOutsideAllowed?: boolean | undefined;
    sessionConfig?: {
        maxExpiryDays: number;
        allowList: {
            contractAddress: string;
            methods: string[];
        }[];
    } | {} | null | undefined;
}>, "many">;
export type KnownDapp = z.infer<typeof knownDappSchema>;
export type KnownDapps = z.infer<typeof knownDappsSchema>;
