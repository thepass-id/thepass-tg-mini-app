import { z } from 'zod';
export declare const BackendAccountSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    address: z.ZodString;
    ownerAddress: z.ZodString;
    chain: z.ZodEnum<["ethereum", "zksync", "zksync2", "starknet"]>;
    deploymentStatus: z.ZodEnum<["notDeployed", "deploying", "deployed", "deployError"]>;
    application: z.ZodEnum<["mobile", "webwallet", "argentx"]>;
    guardianAddresses: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    enabledGuardianAddresses: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    implClassHash: z.ZodOptional<z.ZodString>;
    proxyClassHash: z.ZodOptional<z.ZodString>;
    salt: z.ZodOptional<z.ZodString>;
    created: z.ZodOptional<z.ZodString>;
    contractVersion: z.ZodOptional<z.ZodString>;
    contractName: z.ZodOptional<z.ZodString>;
    version: z.ZodOptional<z.ZodNumber>;
    owner: z.ZodOptional<z.ZodObject<{
        guid: z.ZodOptional<z.ZodString>;
        signerType: z.ZodOptional<z.ZodEnum<["StarknetKey", "EthereumKey"]>>;
    }, "strip", z.ZodTypeAny, {
        guid?: string | undefined;
        signerType?: "StarknetKey" | "EthereumKey" | undefined;
    }, {
        guid?: string | undefined;
        signerType?: "StarknetKey" | "EthereumKey" | undefined;
    }>>;
    colour: z.ZodOptional<z.ZodString>;
    icon: z.ZodOptional<z.ZodString>;
    network: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    address: string;
    ownerAddress: string;
    chain: "ethereum" | "zksync" | "zksync2" | "starknet";
    deploymentStatus: "notDeployed" | "deploying" | "deployed" | "deployError";
    application: "mobile" | "webwallet" | "argentx";
    name?: string | undefined;
    guardianAddresses?: string[] | undefined;
    enabledGuardianAddresses?: string[] | undefined;
    implClassHash?: string | undefined;
    proxyClassHash?: string | undefined;
    salt?: string | undefined;
    created?: string | undefined;
    contractVersion?: string | undefined;
    contractName?: string | undefined;
    version?: number | undefined;
    owner?: {
        guid?: string | undefined;
        signerType?: "StarknetKey" | "EthereumKey" | undefined;
    } | undefined;
    colour?: string | undefined;
    icon?: string | undefined;
    network?: string | undefined;
}, {
    address: string;
    ownerAddress: string;
    chain: "ethereum" | "zksync" | "zksync2" | "starknet";
    deploymentStatus: "notDeployed" | "deploying" | "deployed" | "deployError";
    application: "mobile" | "webwallet" | "argentx";
    name?: string | undefined;
    guardianAddresses?: string[] | undefined;
    enabledGuardianAddresses?: string[] | undefined;
    implClassHash?: string | undefined;
    proxyClassHash?: string | undefined;
    salt?: string | undefined;
    created?: string | undefined;
    contractVersion?: string | undefined;
    contractName?: string | undefined;
    version?: number | undefined;
    owner?: {
        guid?: string | undefined;
        signerType?: "StarknetKey" | "EthereumKey" | undefined;
    } | undefined;
    colour?: string | undefined;
    icon?: string | undefined;
    network?: string | undefined;
}>;
export type BackendAccount = z.infer<typeof BackendAccountSchema>;
export declare const AddSmartAccountResponseSchema: z.ZodObject<{
    address: z.ZodString;
    guardianAddress: z.ZodOptional<z.ZodString>;
    account: z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        address: z.ZodString;
        ownerAddress: z.ZodString;
        chain: z.ZodEnum<["ethereum", "zksync", "zksync2", "starknet"]>;
        deploymentStatus: z.ZodEnum<["notDeployed", "deploying", "deployed", "deployError"]>;
        application: z.ZodEnum<["mobile", "webwallet", "argentx"]>;
        guardianAddresses: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        enabledGuardianAddresses: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        implClassHash: z.ZodOptional<z.ZodString>;
        proxyClassHash: z.ZodOptional<z.ZodString>;
        salt: z.ZodOptional<z.ZodString>;
        created: z.ZodOptional<z.ZodString>;
        contractVersion: z.ZodOptional<z.ZodString>;
        contractName: z.ZodOptional<z.ZodString>;
        version: z.ZodOptional<z.ZodNumber>;
        owner: z.ZodOptional<z.ZodObject<{
            guid: z.ZodOptional<z.ZodString>;
            signerType: z.ZodOptional<z.ZodEnum<["StarknetKey", "EthereumKey"]>>;
        }, "strip", z.ZodTypeAny, {
            guid?: string | undefined;
            signerType?: "StarknetKey" | "EthereumKey" | undefined;
        }, {
            guid?: string | undefined;
            signerType?: "StarknetKey" | "EthereumKey" | undefined;
        }>>;
        colour: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodString>;
        network: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        address: string;
        ownerAddress: string;
        chain: "ethereum" | "zksync" | "zksync2" | "starknet";
        deploymentStatus: "notDeployed" | "deploying" | "deployed" | "deployError";
        application: "mobile" | "webwallet" | "argentx";
        name?: string | undefined;
        guardianAddresses?: string[] | undefined;
        enabledGuardianAddresses?: string[] | undefined;
        implClassHash?: string | undefined;
        proxyClassHash?: string | undefined;
        salt?: string | undefined;
        created?: string | undefined;
        contractVersion?: string | undefined;
        contractName?: string | undefined;
        version?: number | undefined;
        owner?: {
            guid?: string | undefined;
            signerType?: "StarknetKey" | "EthereumKey" | undefined;
        } | undefined;
        colour?: string | undefined;
        icon?: string | undefined;
        network?: string | undefined;
    }, {
        address: string;
        ownerAddress: string;
        chain: "ethereum" | "zksync" | "zksync2" | "starknet";
        deploymentStatus: "notDeployed" | "deploying" | "deployed" | "deployError";
        application: "mobile" | "webwallet" | "argentx";
        name?: string | undefined;
        guardianAddresses?: string[] | undefined;
        enabledGuardianAddresses?: string[] | undefined;
        implClassHash?: string | undefined;
        proxyClassHash?: string | undefined;
        salt?: string | undefined;
        created?: string | undefined;
        contractVersion?: string | undefined;
        contractName?: string | undefined;
        version?: number | undefined;
        owner?: {
            guid?: string | undefined;
            signerType?: "StarknetKey" | "EthereumKey" | undefined;
        } | undefined;
        colour?: string | undefined;
        icon?: string | undefined;
        network?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    address: string;
    account: {
        address: string;
        ownerAddress: string;
        chain: "ethereum" | "zksync" | "zksync2" | "starknet";
        deploymentStatus: "notDeployed" | "deploying" | "deployed" | "deployError";
        application: "mobile" | "webwallet" | "argentx";
        name?: string | undefined;
        guardianAddresses?: string[] | undefined;
        enabledGuardianAddresses?: string[] | undefined;
        implClassHash?: string | undefined;
        proxyClassHash?: string | undefined;
        salt?: string | undefined;
        created?: string | undefined;
        contractVersion?: string | undefined;
        contractName?: string | undefined;
        version?: number | undefined;
        owner?: {
            guid?: string | undefined;
            signerType?: "StarknetKey" | "EthereumKey" | undefined;
        } | undefined;
        colour?: string | undefined;
        icon?: string | undefined;
        network?: string | undefined;
    };
    guardianAddress?: string | undefined;
}, {
    address: string;
    account: {
        address: string;
        ownerAddress: string;
        chain: "ethereum" | "zksync" | "zksync2" | "starknet";
        deploymentStatus: "notDeployed" | "deploying" | "deployed" | "deployError";
        application: "mobile" | "webwallet" | "argentx";
        name?: string | undefined;
        guardianAddresses?: string[] | undefined;
        enabledGuardianAddresses?: string[] | undefined;
        implClassHash?: string | undefined;
        proxyClassHash?: string | undefined;
        salt?: string | undefined;
        created?: string | undefined;
        contractVersion?: string | undefined;
        contractName?: string | undefined;
        version?: number | undefined;
        owner?: {
            guid?: string | undefined;
            signerType?: "StarknetKey" | "EthereumKey" | undefined;
        } | undefined;
        colour?: string | undefined;
        icon?: string | undefined;
        network?: string | undefined;
    };
    guardianAddress?: string | undefined;
}>;
export type AddSmartAccountResponse = z.infer<typeof AddSmartAccountResponseSchema>;
export declare const AddSmartAcountRequestSchema: z.ZodObject<{
    ownerAddress: z.ZodString;
    signature: z.ZodObject<{
        r: z.ZodString;
        s: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        r: string;
        s: string;
    }, {
        r: string;
        s: string;
    }>;
    implClassHash: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    icon: z.ZodOptional<z.ZodString>;
    network: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    ownerAddress: string;
    signature: {
        r: string;
        s: string;
    };
    name?: string | undefined;
    implClassHash?: string | undefined;
    icon?: string | undefined;
    network?: string | undefined;
}, {
    ownerAddress: string;
    signature: {
        r: string;
        s: string;
    };
    name?: string | undefined;
    implClassHash?: string | undefined;
    icon?: string | undefined;
    network?: string | undefined;
}>;
export type AddSmartAccountRequest = z.infer<typeof AddSmartAcountRequestSchema>;
