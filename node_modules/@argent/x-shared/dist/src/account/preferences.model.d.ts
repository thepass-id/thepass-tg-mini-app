import { z } from 'zod';
export declare const preferencesSchema: z.ZodObject<{
    value: z.ZodString;
    platform: z.ZodNullable<z.ZodEnum<["ios", "argentx", "android", "webwallet"]>>;
}, "strip", z.ZodTypeAny, {
    value: string;
    platform: "webwallet" | "argentx" | "ios" | "android" | null;
}, {
    value: string;
    platform: "webwallet" | "argentx" | "ios" | "android" | null;
}>;
export type Preferences = z.infer<typeof preferencesSchema>;
export declare const preferencesEndpointPayload: z.ZodObject<{
    preferences: z.ZodRecord<z.ZodString, z.ZodObject<{
        value: z.ZodString;
        platform: z.ZodNullable<z.ZodEnum<["ios", "argentx", "android", "webwallet"]>>;
    }, "strip", z.ZodTypeAny, {
        value: string;
        platform: "webwallet" | "argentx" | "ios" | "android" | null;
    }, {
        value: string;
        platform: "webwallet" | "argentx" | "ios" | "android" | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    preferences: Record<string, {
        value: string;
        platform: "webwallet" | "argentx" | "ios" | "android" | null;
    }>;
}, {
    preferences: Record<string, {
        value: string;
        platform: "webwallet" | "argentx" | "ios" | "android" | null;
    }>;
}>;
export type PreferencesPayload = z.infer<typeof preferencesEndpointPayload>;
