import { MinimalProviderInterface } from '@argent/x-multicall';
import { StarknetDomainName } from '../..';
import { IHttpService } from '../../../../http';
import { IStarknetAddressService } from './IStarknetAddressService';
type MinimalHttpService = Pick<IHttpService, "get">;
export declare class StarknetAddressService implements IStarknetAddressService {
    readonly httpService: MinimalHttpService;
    readonly baseUrl: string;
    readonly allowedArgentNameNetworkId: string;
    constructor(httpService: MinimalHttpService, baseUrl: string, allowedArgentNameNetworkId: string);
    parseAddressOrDomain(addressOrDomain: string, networkId: string, multicall: MinimalProviderInterface): Promise<`0x${string}`>;
    getAddressFromDomainName(domain: StarknetDomainName, networkId: string, multicall: MinimalProviderInterface): Promise<`0x${string}`>;
}
export {};
