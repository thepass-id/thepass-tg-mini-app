import { z as t } from "zod";
import { addressSchema as a, normalizeAddress as m } from "./address.js";
import { addressInputSchema as o } from "./addressInput.js";
import { argentNameSchema as s, isEqualArgentName as i, isArgentName as c, normalizeArgentName as u } from "./argentName.js";
import { starknetIdSchema as S, isEqualStarknetId as f, isStarknetId as l, normalizeStarknetId as d } from "./starknetId.js";
const n = t.union([
  s,
  S
]), z = t.union([
  a,
  n
]), A = t.union([
  o,
  n
]), g = (e) => n.safeParse(e).success, q = (e, r) => {
  try {
    return r ? i(e, r) || f(e, r) : !1;
  } catch {
  }
  return !1;
}, E = (e) => l(e) ? d(e) : c(e) ? u(e) : m(e);
export {
  A as addressOrDomainInputSchema,
  z as addressOrDomainSchema,
  q as isEqualStarknetDomainName,
  g as isStarknetDomainName,
  E as normalizeAddressOrDomain,
  n as starknetDomainNameSchema
};
