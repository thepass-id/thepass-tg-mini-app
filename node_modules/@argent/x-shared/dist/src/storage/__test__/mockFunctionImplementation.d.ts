import { IObjectStore, IRepository } from '../interface';
export declare class MockFnObjectStore<T> implements IObjectStore<T> {
    namespace: string;
    get: import('vitest').Mock<(...args: any[]) => any>;
    set: import('vitest').Mock<(...args: any[]) => any>;
    subscribe: import('vitest').Mock<(...args: any[]) => any>;
}
export declare class MockFnRepository<T> implements IRepository<T> {
    namespace: string;
    get: import('vitest').Mock<(...args: any[]) => any>;
    upsert: import('vitest').Mock<(...args: any[]) => any>;
    subscribe: import('vitest').Mock<(...args: any[]) => any>;
    remove: import('vitest').Mock<(...args: any[]) => any>;
}
