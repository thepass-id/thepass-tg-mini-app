import { num as s } from "starknet";
const F = 3, i = process.env.FEE_OVERHEAD ? parseFloat(process.env.FEE_OVERHEAD) : F, a = 1.5, e = 10, c = ({ estimatedFee: t, overheadMultiplier: n = i }) => {
  const E = s.toBigInt(t) * BigInt(n * e) / BigInt(e);
  return s.toHex(E);
}, I = ({ suggestedMaxFee: t, overheadMultiplier: n = i, starknetJsOverheadMultiplier: o = a }) => {
  const g = s.toBigInt(t) * BigInt(e) / BigInt(o * e);
  return c({ estimatedFee: g, overheadMultiplier: n });
};
export {
  i as FEE_OVERHEAD,
  c as argentMaxFee,
  I as modifySnjsFeeOverhead
};
