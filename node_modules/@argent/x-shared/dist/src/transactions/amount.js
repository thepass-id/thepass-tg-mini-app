import { uint256 as t } from "starknet";
import { z as n } from "zod";
import { parseUnits as e } from "../bigdecimal/parseUnits.js";
const i = (r, o = 18) => e(r.replace(",", "."), Number(o)), m = n.string().trim().refine((r) => r !== "", {
  message: "Amount is required"
}).refine((r) => {
  try {
    const o = i(r).value;
    if (o < 0n)
      throw new Error("Amount must be positive");
    if (o === 0n)
      throw new Error("Amount can not be zero");
    if (o > t.UINT_256_MAX)
      throw new Error("Amount is too big");
  } catch {
    throw new Error("Amount should be a number");
  }
  return !0;
}, { message: "Invalid amount" }), p = (r) => !!m.parse(r);
export {
  m as inputAmountSchema,
  p as isValidInputAmount,
  i as parseAmount
};
