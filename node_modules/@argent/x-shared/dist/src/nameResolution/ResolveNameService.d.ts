import { ArgentBackendNetworkId } from '../backend';
import { Address } from '../chains/starknet/address';
import { IResolveNameService } from './IResolveNameService';
/**
 * ResolveNameService class implements IResolveNameService interface.
 */
export declare class ResolveNameService implements IResolveNameService {
    protected readonly apiBase: string;
    private readonly headers;
    private readonly httpService;
    constructor(apiBase: string, headers: RequestInit | undefined);
    getAddressFromMultipleStarknetId(network: ArgentBackendNetworkId, starknetIds: string[], includeAvatar?: boolean): Promise<{
        status: "KNOWN" | "UNKNOWN";
        domain: string;
        address?: `0x${string}` | undefined;
        avatar?: string | undefined;
    }[]>;
    getAddressFromStarknetId(network: ArgentBackendNetworkId, starknetId: string, includeAvatar?: boolean): Promise<{
        status: "KNOWN" | "UNKNOWN";
        domain: string;
        address?: `0x${string}` | undefined;
        avatar?: string | undefined;
    }>;
    /**
     * getAddressFromStarknetId: retrieve address from starknetId
     */
    getStarknetIdFromAddress(network: ArgentBackendNetworkId, addresses: Address[], includeAvatar?: boolean): Promise<{
        address: `0x${string}`;
        status: "KNOWN" | "UNKNOWN";
        resolutions?: {
            name: string;
            provider: string;
            avatar?: string | undefined;
        }[] | undefined;
    }[]>;
    getProvidersNames(network: ArgentBackendNetworkId): Promise<string[]>;
}
