import { default as retry } from 'async-retry';
import { ArgentBackendNetworkId } from '../../backend';
import { Address } from '../../chains/starknet/address';
import { ApiDefiDecomposition, ApiTokenInfo } from './types/backend.model';
import { WebBaseTokenWithBalance } from './types/webToken.model';
export type SelectorFn<T> = (value: T) => boolean;
export interface ITokenServiceDefiDecomposition {
    fetchDefiDecomposition: (address: Address, application: "mobile" | "webwallet" | "argentx") => Promise<ApiDefiDecomposition[]>;
}
/**
 * ITokenService interface provides methods for managing tokens, including storage methods, fetch methods, and get methods.
 */
export interface ITokenServiceWeb extends ITokenServiceDefiDecomposition {
    /**
     * Fetch methods - These methods fetch data from backend
     * fetchAddressTokenBalancesFromBackend: Fetch list of tokens and balances for given account from backend
     * fetchTokensInfoFromBackend: Fetch tokens info from backend
     * fetchDefiDecomposition: Fetch DeFi decomposition for given account from backend
     */
    fetchAddressTokenBalancesFromBackend: (address: Address, network: ArgentBackendNetworkId, opts?: retry.Options) => Promise<WebBaseTokenWithBalance[]>;
    fetchTokensInfoFromBackend(tokenAddress?: Address): Promise<ApiTokenInfo[] | undefined>;
}
