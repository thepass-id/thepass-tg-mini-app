import { Address } from '../../../../chains';
import { Activity } from '../schema';
interface ParseFinanceActivitiesProps {
    activities: Activity[];
    accountAddressesOnNetwork: Address[];
    tokenAddressesOnNetwork: Address[];
}
interface ParseFinanceActivitiesResult {
    tokenActivity: {
        accountAddresses: Address[];
        tokenAddresses: Address[];
        newTokenAddresses: Address[];
    };
    nftActivity: {
        accountAddresses: Address[];
        tokenAddresses: Address[];
    };
}
/**
 * Parses finance-related activities from the provided list of activities, grouping addresses
 * into tokens and NFTs,
 *
 * @param activities: Array of activities to be analyzed.
 * @param accountAddressesOnNetwork: Array of account addresses known to be active on the network.
 * @param tokenAddressesOnNetwork: Array of token addresses known to exist on the network.
 * @returns {ParseFinanceActivitiesResult} An object containing two nested objects, one for tokens and one for NFTs,
 * each with corresponding arrays for account addresses and token addresses.
 */
export declare function parseFinanceActivities({ activities, accountAddressesOnNetwork, tokenAddressesOnNetwork, }: ParseFinanceActivitiesProps): ParseFinanceActivitiesResult;
export {};
