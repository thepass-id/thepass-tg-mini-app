"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const n=require("../../../../chains/starknet/address.cjs");function r({activities:c,accountAddressesOnNetwork:o,tokenAddressesOnNetwork:i}){const s={tokenActivity:{accountAddresses:[],tokenAddresses:[],newTokenAddresses:[]},nftActivity:{accountAddresses:[],tokenAddresses:[]}};return c.forEach(d=>{if(d.group==="finance"&&d.relatedAddresses){const A=d.transfers.some(t=>t.asset.type==="token");d.relatedAddresses.forEach(({type:t,address:e})=>{t==="token"?n.includesAddress(e,i)&&(n.includesAddress(e,s.tokenActivity.tokenAddresses)||s.tokenActivity.tokenAddresses.push(e)):t==="wallet"&&n.includesAddress(e,o)&&(A?n.includesAddress(e,s.tokenActivity.accountAddresses)||s.tokenActivity.accountAddresses.push(e):n.includesAddress(e,s.nftActivity.accountAddresses)||s.nftActivity.accountAddresses.push(e))}),d.transfers.forEach(t=>{if(t.asset.type==="token"){const e=t.asset.tokenAddress;!n.includesAddress(e,i)&&!n.includesAddress(e,s.tokenActivity.newTokenAddresses)&&s.tokenActivity.newTokenAddresses.push(e)}else if(t.asset.type==="nft"){const e=t.asset.tokenAddress;n.includesAddress(e,s.nftActivity.tokenAddresses)||s.nftActivity.tokenAddresses.push(e)}})}}),s}exports.parseFinanceActivities=r;
