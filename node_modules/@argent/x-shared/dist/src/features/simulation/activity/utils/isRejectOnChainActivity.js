import { isEqualAddress as c } from "../../../../chains/starknet/address.js";
import { ETH_TOKEN_ADDRESS as l } from "../../../../chains/starknet/constants.js";
function m(s) {
  const t = o(s), n = u(s);
  return t || n;
}
const o = (s) => {
  var f;
  if (!((f = s.actions) != null && f.length))
    return !1;
  const t = s.actions[0];
  if (t.name !== "ERC20_transfer")
    return !1;
  let n, i, a, r;
  return t.defaultProperties && t.defaultProperties.forEach((e) => {
    e.type === "token_address" && e.token.address === l && (i = !0), e.type === "calldata" && (n = e.calldata[0]);
  }), t.properties.length > 1 && t.properties.forEach((e) => {
    e.type === "amount" && e.label === "ERC20_transfer_amount" && e.amount === "0" && (a = !0), e.type === "address" && e.label === "ERC20_transfer_recipient" && c(e.address, n) && (r = !0);
  }), i && a && r;
}, u = (s) => {
  var t, n;
  return !!("meta" in s && (n = (t = s.meta) == null ? void 0 : t.title) != null && n.includes("On-chain rejection"));
};
export {
  m as isRejectOnChainActivity
};
