import { includesAddress as n } from "../../../../chains/starknet/address.js";
function k({ activities: A, accountAddressesOnNetwork: d, tokenAddressesOnNetwork: i }) {
  const s = {
    tokenActivity: {
      accountAddresses: [],
      tokenAddresses: [],
      newTokenAddresses: []
    },
    nftActivity: {
      accountAddresses: [],
      tokenAddresses: []
    }
  };
  return A.forEach((o) => {
    if (o.group === "finance" && o.relatedAddresses) {
      const c = o.transfers.some((t) => t.asset.type === "token");
      o.relatedAddresses.forEach(({ type: t, address: e }) => {
        t === "token" ? n(e, i) && (n(e, s.tokenActivity.tokenAddresses) || s.tokenActivity.tokenAddresses.push(e)) : t === "wallet" && n(e, d) && (c ? n(e, s.tokenActivity.accountAddresses) || s.tokenActivity.accountAddresses.push(e) : n(e, s.nftActivity.accountAddresses) || s.nftActivity.accountAddresses.push(e));
      }), o.transfers.forEach((t) => {
        if (t.asset.type === "token") {
          const e = t.asset.tokenAddress;
          !n(e, i) && !n(e, s.tokenActivity.newTokenAddresses) && s.tokenActivity.newTokenAddresses.push(e);
        } else if (t.asset.type === "nft") {
          const e = t.asset.tokenAddress;
          n(e, s.nftActivity.tokenAddresses) || s.nftActivity.tokenAddresses.push(e);
        }
      });
    }
  }), s;
}
export {
  k as parseFinanceActivities
};
