import { isActivitySummary as d, activitySummarySchema as n } from "./schema.js";
const p = (e) => e.map(s), s = (e) => {
  var o, i, r, a;
  if (d(e))
    return n.parse(e);
  const t = !!e.sent;
  if (e.token.type !== "ERC20") {
    const l = {
      asset: {
        type: "nft",
        tokenAddress: e.token.address,
        tokenId: e.tokenId ? parseInt(e.tokenId) : 0,
        amount: e.value,
        collectionName: e.token.name,
        collectionPreviewImage: (o = e.token.imageUrls) == null ? void 0 : o.preview,
        nftName: (i = e.tokenIdDetails) == null ? void 0 : i.name,
        nftPreviewImage: (a = (r = e.tokenIdDetails) == null ? void 0 : r.imageUrls) == null ? void 0 : a.preview
      },
      sent: t
    };
    return n.parse(l);
  }
  const c = {
    asset: {
      type: "token",
      tokenAddress: e.token.address,
      amount: e.value,
      fiatAmount: {
        currency: "USD",
        currencyAmount: e.usdValue || "0"
      }
    },
    sent: t
  };
  return n.parse(c);
};
export {
  s as normalizeActivitySummary,
  p as normalizeActivitySummaryCollection
};
