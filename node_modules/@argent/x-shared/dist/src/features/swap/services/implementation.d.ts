import { Address } from '../../../chains';
import { SwapOrderResponse, SwapQuoteResponse, Trade } from '../models';
import { IHttpService } from '../../../http';
import { WebToken } from '../../../tokens/service/types/webToken.model';
import { ISharedSwapService } from './interface';
export declare class SharedSwapService implements ISharedSwapService {
    private readonly httpService;
    swapQuoteUrl: string;
    swapOrderUrl: string;
    constructor(httpService: IHttpService, swapBaseUrl?: string);
    getSwapQuoteForPay(payTokenAddress: Address, receiveTokenAddress: Address, payAmount: string, accountAddress: Address, currency?: string): Promise<SwapQuoteResponse>;
    getSwapTradeFromQuote(quote: SwapQuoteResponse, payToken: WebToken, receiveToken: WebToken): Promise<Trade>;
    getSwapOrderFromTrade(accountAddress: string, trade: Trade, userSlippageTolerance: number): Promise<SwapOrderResponse>;
}
